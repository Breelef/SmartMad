name: CI/CD with Oracle Cloud

on:
  push:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cypress:
    name: Cypress Tests
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      NEO4J_BOLT_URL: ${{ secrets.NEO4J_BOLT_URL }} 
      NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      # Step 1: Install backend dependencies
      - name: Install Dependencies (Backend)
        run: |
          npm install
          npm install cypress --save-dev
        working-directory: ./server

      # Step 2: Start backend server in the background
      - name: Start Backend Server
        run: |
          nohup npm run dev
        working-directory: ./server

      # Step 3: Wait for the backend server to be ready
      - name: Wait for Backend Server to Start
        run: |
          npx wait-on http://localhost:3000 
          
      # Step 4: Run Cypress tests
      - name: Run Cypress Tests
        run: |
          npx cypress run --headless --browser chrome --spec './server/tests/cypress/cypress/e2e/spec.cy.js'
        working-directory: .cypress

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Client-side build steps
      - name: Install Dependencies (Client)
        run: npm install
        working-directory: ./client/smartmad
      - name: Build Application (Client)
        run: npm run build
        working-directory: ./client/smartmad

      # Server-side test steps
      - name: Install Dependencies (Server)
        run: npm install
        working-directory: ./server

      # Optional: List files (for debugging)
      - name: List Files
        run: ls -R
        working-directory: ./client/smartmad
