name: CI/CD with Oracle Cloud

on:
  push:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cypress:
    name: Cypress Tests
    runs-on: ubuntu-latest
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          npm install
          npm install cypress --save-dev
        working-directory: ./server

      - name: Run Cypress Tests
        run: |
          npx cypress run --headless --browser chrome --spec 'cypress/e2e/spec.cy.js'
        working-directory: ./server/tests/cypress


  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Client-side build steps
      - name: Install Dependencies (Client)
        run: npm install
        working-directory: ./client/smartmad
      - name: Build Application (Client)
        run: npm run build
        working-directory: ./client/smartmad

      # Server-side test steps
      - name: Install Dependencies (Server)
        run: npm install
        working-directory: ./server

      # Optional: List files (for debugging)
      - name: List Files
        run: ls -R
        working-directory: ./client/smartmad

      
#      - name: Set up Oracle CLI
#        uses: oracle/oci-cli-action@v1.1
#        with:
#          tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
#          user_ocid: ${{ secrets.OCI_USER_OCID }}
#          fingerprint: ${{ secrets.OCI_FINGERPRINT }}
#          private_key: ${{ secrets.OCI_PRIVATE_KEY }}
#          region: ${{ secrets.OCI_REGION }}

      # Build the application (if necessary)
#      - name: Build Application
#        run: |
#          npm install
#          npm run build

      # Deploy to Oracle Cloud
#      - name: Deploy Application
#        run: |
#          oci --region ${{ secrets.OCI_REGION }} compute instance action \
#            --instance-id <INSTANCE_ID> \
#            --action SOFTRESET
